<?xml version="1.0"?>

<!--
Ant Build file for jvxi11 ... Java VXI-11 interface library
-->

<project name="jvxi11" default="test">

<path id="compile.classpath">
  <fileset dir="external/"> 
    <include name="oncrpc.jar"/>
  </fileset>
</path>

<path id="test.compile.classpath">
  <fileset dir="external/"> 
    <include name="oncrpc.jar"/>
  </fileset>
  <pathelement path="dist/jvxi11.jar" />
</path>

<!-- The following property is expected to be overridden by caller -->   
<property name="one-jar.dist.dir" value="./external"/>   
<property name="one-jar.version" value="0.97"/>
<property name="one-jar.ant.jar" value="${one-jar.dist.dir}/one-jar-ant-task-${one-jar.version}.jar"/>
<taskdef name="one-jar" classname="com.simontuffs.onejar.ant.OneJarTask" 
         classpath="${one-jar.ant.jar}" onerror="report"/>

<target name="init">
  <taskdef name="jrpcgen" classname="org.acplt.oncrpc.ant.JrpcgenTask" classpath="external/jrpcgen.jar" />
  <mkdir dir="build/classes" />
  <mkdir dir="test/build/classes" />
  <mkdir dir="dist" />
  <mkdir dir="src/jvxi11/rpc" />
  <mkdir dir="doc/javadoc" />
  <!--
  <jrpcgen srcfile="src/jvxi11/vxi11intr.rpcl" destdir="src/"  package="jvxi11.rpc" verbose="yes"/>
  <jrpcgen srcfile="src/jvxi11/vxi11core.rpcl" destdir="src/"  package="jvxi11.rpc" verbose="yes"/> 
  -->
  <exec executable="/bin/bash" dir="src/jvxi11" >
    <arg value="./makerpc" />
  </exec>

  <echo>rpc generation complete!</echo>
</target>

<target name="compile" depends="init" >
  <javac srcdir="src"  destdir="build/classes" includeAntRuntime="no"  classpathref="compile.classpath">
    <!-- <classpath refid="compile.classpath" /> -->
  </javac>
  <echo>compilation complete!</echo>
</target>

<target name="doc" depends="init" >
  <javadoc sourcepath="src" destdir="doc/javadoc" />
</target>

<target name="jar" depends="compile,doc">
  <jar jarfile="dist/jvxi11.jar" >
    <fileset dir="build/classes" />
    <fileset dir="doc/" includes="javadoc/**" />
  </jar>
</target>

<target name="test" depends="jar" >
  <!-- Compile the test code -->
  <javac srcdir="test/testjvxi11/src"  destdir="test/build/classes" includeAntRuntime="no" 
         classpathref="test.compile.classpath" />

  <!-- Make a one-jar runnable of each test -->
  <one-jar destfile="test/build/test.jar">
    <manifest>
      <attribute name="One-Jar-Main-Class" value="testjvxi11.Testjvxi11App" />
    </manifest>
    <main>
      <fileset dir="test/build/classes"  includes="testjvxi11/Testjvxi11App.class" />
    </main>
    <lib >
      <fileset file="external/oncrpc.jar" />
      <fileset file="dist/jvxi11.jar" />
    </lib>
  </one-jar>

  <one-jar destfile="test/build/test2.jar">
    <manifest>
      <attribute name="One-Jar-Main-Class" value="testjvxi11.Testjvxi11App2" />
    </manifest>
    <main>
      <fileset dir="test/build/classes"  includes="testjvxi11/Testjvxi11App2.class" />
    </main>
    <lib>
      <fileset file="external/oncrpc.jar" />
      <fileset file="dist/jvxi11.jar" />
    </lib>
  </one-jar>

</target>


<target name="clean" >
  <delete dir="build/classes" />
  <delete dir="test/build/classes" />
  <delete dir="src/jvxi11/rpc" />
  <delete dir="dist" />
  <delete dir="doc/javadoc" />
</target>

<target name="distclean" depends="clean" >
  <exec executable="git" >
    <arg value="clean" />
    <arg value="-dfx" />
  </exec>
</target>

</project>
